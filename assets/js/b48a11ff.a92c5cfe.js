"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[822],{8132:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=a(4848),r=a(8453);const s={sidebar_position:2},o="Database",i={id:"database",title:"Database",description:"Our boilerplate integrates Firebase Realtime Database for efficient data storage and real-time synchronization. This allows you to build reactive apps with ease.",source:"@site/docs/database.md",sourceDirName:".",slug:"/database",permalink:"/mvp-studio-architecture/docs/database",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/database.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Authentication",permalink:"/mvp-studio-architecture/docs/authentication"},next:{title:"Push Notifications",permalink:"/mvp-studio-architecture/docs/push-notifications"}},c={},d=[{value:"Usage",id:"usage",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,n.jsxs)(t.p,{children:["Our boilerplate integrates ",(0,n.jsx)(t.strong,{children:"Firebase Realtime Database"})," for efficient data storage and real-time synchronization. This allows you to build reactive apps with ease."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.p,{children:"Here's an example of how to use Firebase Realtime Database:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import database from "@react-native-firebase/database";\n\n// Read data\nconst readData = async (path: string) => {\n  try {\n    const snapshot = await database().ref(path).once("value");\n    return snapshot.val();\n  } catch (error) {\n    console.error("Error reading data:", error);\n    return null;\n  }\n};\n\n// Write data\nconst writeData = async (path: string, data: any) => {\n  try {\n    await database().ref(path).set(data);\n    console.log("Data written successfully");\n  } catch (error) {\n    console.error("Error writing data:", error);\n  }\n};\n\n// Listen for real-time updates\nconst listenForUpdates = (path: string, callback: (data: any) => void) => {\n  const onValueChange = database()\n    .ref(path)\n    .on("value", (snapshot) => {\n      const data = snapshot.val();\n      callback(data);\n    });\n\n  // Return a function to unsubscribe from updates\n  return () => database().ref(path).off("value", onValueChange);\n};\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var n=a(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);