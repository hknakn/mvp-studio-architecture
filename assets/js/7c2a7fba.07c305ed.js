"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[7498],{6177:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/mvp-studio-architecture/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Project Setup","items":[{"type":"link","label":"Getting Started","href":"/mvp-studio-architecture/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"Tech Stack","href":"/mvp-studio-architecture/docs/tech-stack","docId":"tech-stack","unlisted":false},{"type":"link","label":"Architecture Overview","href":"/mvp-studio-architecture/docs/architecture","docId":"architecture","unlisted":false},{"type":"link","label":"File and Folder Structure","href":"/mvp-studio-architecture/docs/file-and-folder-structure","docId":"file-and-folder-structure","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"Navigation","href":"/mvp-studio-architecture/docs/navigation","docId":"navigation","unlisted":false},{"type":"link","label":"State Management","href":"/mvp-studio-architecture/docs/state-management","docId":"state-management","unlisted":false},{"type":"link","label":"Data Handling","href":"/mvp-studio-architecture/docs/data-handling","docId":"data-handling","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"UI and UX","items":[{"type":"link","label":"Elements","href":"/mvp-studio-architecture/docs/elements","docId":"elements","unlisted":false},{"type":"link","label":"Screens","href":"/mvp-studio-architecture/docs/screens","docId":"screens","unlisted":false},{"type":"link","label":"Theming","href":"/mvp-studio-architecture/docs/theming","docId":"theming","unlisted":false},{"type":"link","label":"Styling","href":"/mvp-studio-architecture/docs/styling","docId":"styling","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Features","items":[{"type":"link","label":"Authentication","href":"/mvp-studio-architecture/docs/authentication","docId":"authentication","unlisted":false},{"type":"link","label":"Database","href":"/mvp-studio-architecture/docs/database","docId":"database","unlisted":false},{"type":"link","label":"Push Notifications","href":"/mvp-studio-architecture/docs/push-notifications","docId":"push-notifications","unlisted":false},{"type":"link","label":"Feature Flagging","href":"/mvp-studio-architecture/docs/feature-flagging","docId":"feature-flagging","unlisted":false},{"type":"link","label":"In-App Purchases and Subscriptions","href":"/mvp-studio-architecture/docs/in-app-purchases","docId":"in-app-purchases","unlisted":false},{"type":"link","label":"Internationalization","href":"/mvp-studio-architecture/docs/internationalization","docId":"internationalization","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developer Tools","items":[{"type":"link","label":"Testing","href":"/mvp-studio-architecture/docs/testing","docId":"testing","unlisted":false},{"type":"link","label":"CI/CD","href":"/mvp-studio-architecture/docs/ci-cd","docId":"ci-cd","unlisted":false},{"type":"link","label":"Error Tracking","href":"/mvp-studio-architecture/docs/error-tracking","docId":"error-tracking","unlisted":false},{"type":"link","label":"Versioning","href":"/mvp-studio-architecture/docs/versioning","docId":"versioning","unlisted":false},{"type":"link","label":"Development Workflow","href":"/mvp-studio-architecture/docs/development-workflow","docId":"development-workflow","unlisted":false},{"type":"link","label":"Security","href":"/mvp-studio-architecture/docs/security","docId":"security","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Third Party Libraries","items":[{"type":"link","label":"React Native MMKV","href":"/mvp-studio-architecture/docs/MMKV","docId":"MMKV","unlisted":false},{"type":"link","label":"Reanimated","href":"/mvp-studio-architecture/docs/reanimated","docId":"reanimated","unlisted":false},{"type":"link","label":"React Native Skottie","href":"/mvp-studio-architecture/docs/skottie","docId":"skottie","unlisted":false},{"type":"link","label":"React Hook Form","href":"/mvp-studio-architecture/docs/react-hook-form","docId":"react-hook-form","unlisted":false},{"type":"link","label":"React Native SVG","href":"/mvp-studio-architecture/docs/react-native-svg","docId":"react-native-svg","unlisted":false},{"type":"link","label":"Haptics","href":"/mvp-studio-architecture/docs/haptics","docId":"haptics","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"architecture":{"id":"architecture","title":"Architecture Overview","description":"The MVP Studio Boilerplate follows a modular, scalable, and maintainable architecture designed for different types of mobile applications. This document provides an overview of the key architectural components and design decisions.","sidebar":"docs"},"authentication":{"id":"authentication","title":"Authentication","description":"Firebase Authentication provides easy-to-use SDKs authenticate users to your app. Our boilerplate includes Firebase Authentication setup, allowing you to easily implement various authentication methods.","sidebar":"docs"},"ci-cd":{"id":"ci-cd","title":"CI/CD","description":"Our boilerplate includes a Continuous Integration and Continuous Deployment (CI/CD) setup using GitHub Actions. This ensures that your code is automatically tested, built, and deployed whenever changes are pushed to your repository.","sidebar":"docs"},"data-handling":{"id":"data-handling","title":"Data Handling","description":"Our boilerplate uses a combination of RTK Query for API calls and data caching, and Redux Persist for local data persistence. The data flow in the MVP Studio Boilerplate, powered by RTK Query, looks like this:","sidebar":"docs"},"database":{"id":"database","title":"Database","description":"Our boilerplate integrates Firebase Realtime Database for efficient data storage and real-time synchronization. This allows you to build reactive apps with ease.","sidebar":"docs"},"development-workflow":{"id":"development-workflow","title":"Development Workflow","description":"Our boilerplate includes several tools and configurations to improve the development workflow, making it easier to maintain code quality and consistency across the project.","sidebar":"docs"},"elements":{"id":"elements","title":"Elements","description":"Our boilerplate includes a set of reusable React Native elements that help maintain consistency and speed up development.","sidebar":"docs"},"error-tracking":{"id":"error-tracking","title":"Error Tracking","description":"Our boilerplate integrates Sentry for error tracking and performance monitoring. This integration helps you identify, diagnose, and fix issues in real-time, ensuring a smooth user experience for your app.","sidebar":"docs"},"feature-flagging":{"id":"feature-flagging","title":"Feature Flagging","description":"Our boilerplate uses Firebase Remote Config for implementing feature flags. This allows you to modify your app\'s behavior and appearance without publishing an app update.","sidebar":"docs"},"file-and-folder-structure":{"id":"file-and-folder-structure","title":"File and Folder Structure","description":"This document outlines the file and folder structure of our MVP Studio Boilerplate. It provides an overview of the key directories and files in the project, along with their purposes and organization.","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"This guide will walk you through the process of setting up and running the MVP Studio Boilerplate for your mobile app development project.","sidebar":"docs"},"haptics":{"id":"haptics","title":"Haptics","description":"Expo Haptics provides haptic feedback for iOS and Android devices. It allows you to add haptic feedback to app to improve the user experience.","sidebar":"docs"},"in-app-purchases":{"id":"in-app-purchases","title":"In-App Purchases and Subscriptions","description":"Our boilerplate integrates RevenueCat to handle in-app purchases and subscriptions, providing a robust and easy-to-use system for monetization.","sidebar":"docs"},"internationalization":{"id":"internationalization","title":"Internationalization","description":"Our boilerplate comes pre-configured with internationalization (i18n) support using the i18n-js library and react-native-localize. This setup allows you to easily create a multi-language app and adapt to different locales.","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to the MVP Studio Boilerplate, your starter for building high-quality mobile applications with React Native. This boilerplate is designed to accelerate your development process and provide scalable, maintainable mobile apps. Whether you\'re crafting a quick MVP or an complex enterprise solution, this boilerplate offers the flexibility and tools you need to succeed.","sidebar":"docs"},"MMKV":{"id":"MMKV","title":"React Native MMKV","description":"Our boilerplate uses React Native MMKV for efficient local data storage. MMKV provides a significant performance boost over AsyncStorage, making it ideal for storing app settings, user preferences, and other local data.","sidebar":"docs"},"navigation":{"id":"navigation","title":"Navigation","description":"Our boilerplate uses React Navigation to handle navigation flows. The navigation structure is pre-configured to support common app layouts and can be easily customized.","sidebar":"docs"},"push-notifications":{"id":"push-notifications","title":"Push Notifications","description":"Our boilerplate includes Firebase Cloud Messaging (FCM) for handling push notifications. This allows you to send targeted notifications to your app users.","sidebar":"docs"},"react-hook-form":{"id":"react-hook-form","title":"React Hook Form","description":"React Hook Form is a library for managing forms in React applications. It provides an efficient and flexible way to handle form state and validation.","sidebar":"docs"},"react-native-svg":{"id":"react-native-svg","title":"React Native SVG","description":"React Native SVG is a library that provides SVG support for React Native applications. It allows you to use SVG files as components and even animate them.","sidebar":"docs"},"reanimated":{"id":"reanimated","title":"Reanimated","description":"React Native Reanimated is a powerful animation library that allows for creating smooth, high-performance animations in React Native applications. This document outlines how Reanimated is integrated and used in the MVP Studio Boilerplate.","sidebar":"docs"},"screens":{"id":"screens","title":"Screens","description":"Our boilerplate comes with several prebuilt screens to speed up your development process. These screens are designed to be customizable and can be easily integrated into your app\'s flow. Here\'s an overview of the available prebuilt screens:","sidebar":"docs"},"security":{"id":"security","title":"Security","description":"Security is a important part of mobile app development. We need to ensure that our app protects user data, prevents unauthorized access, and follows best practices for secure communication and storage.","sidebar":"docs"},"skottie":{"id":"skottie","title":"React Native Skottie","description":"React Native Skottie is a library that allows you to render Lottie animations in React Native using Skia. It provides high-performance animations with a small footprint.","sidebar":"docs"},"state-management":{"id":"state-management","title":"State Management","description":"Our boilerplate uses Redux Toolkit for efficient state management, combined with RTK Query for API calls and caching, and Redux Persist for state persistence. This setup provides a powerful and flexible way to manage your app\'s state and handle data fetching.","sidebar":"docs"},"styling":{"id":"styling","title":"Styling","description":"Our boilerplate uses React Native Unistyles for styling, which provides a powerful and flexible way to style your components while maintaining type safety and enabling easy theming.","sidebar":"docs"},"tech-stack":{"id":"tech-stack","title":"Tech Stack","description":"Our MVP Studio Boilerplate utilizes a carefully selected tech stack for efficient and scalable mobile app development. Here\'s an overview of our key technologies:","sidebar":"docs"},"testing":{"id":"testing","title":"Testing","description":"Our boilerplate comes with a testing setup to ensure code quality and reliability. We use Jest as our test runner, React Native Testing Library for component testing, and Detox for end-to-end testing.","sidebar":"docs"},"theming":{"id":"theming","title":"Theming","description":"Our boilerplate uses a robust theming system to ensure consistent visual design across the app while allowing for easy customization and the implementation of features like ligth / dark mode support.","sidebar":"docs"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."},"ui-and-styling":{"id":"ui-and-styling","title":"UI and Styling","description":"Our boilerplate uses a combination of custom components inspired by React Native Elements and React Native Unistyles for a consistent and easily customizable UI."},"versioning":{"id":"versioning","title":"Versioning","description":"Proper versioning is important for managing the app\'s lifecycle, tracking changes, and ensuring updates. Our boilerplate follows Semantic Versioning (SemVer) and includes tools to automate the versioning process.","sidebar":"docs"}}}}')}}]);