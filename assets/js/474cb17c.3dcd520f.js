"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[3886],{7069:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=s(4848),t=s(8453);const a={sidebar_position:12},i="In-App Purchases and Subscriptions",c={id:"in-app-purchases",title:"In-App Purchases and Subscriptions",description:"Our boilerplate integrates RevenueCat to handle in-app purchases and subscriptions, providing a robust and easy-to-use system for monetization.",source:"@site/docs/in-app-purchases.md",sourceDirName:".",slug:"/in-app-purchases",permalink:"/mvp-studio-architecture/docs/in-app-purchases",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/in-app-purchases.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"docs",previous:{title:"Feature Flagging",permalink:"/mvp-studio-architecture/docs/feature-flagging"},next:{title:"Internationalization",permalink:"/mvp-studio-architecture/docs/internationalization"}},o={},u=[{value:"Benefits of RevenueCat in Our Boilerplate",id:"benefits-of-revenuecat-in-our-boilerplate",level:2},{value:"Using In-App Purchases",id:"using-in-app-purchases",level:2},{value:"Implementing a Paywall",id:"implementing-a-paywall",level:2},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"in-app-purchases-and-subscriptions",children:"In-App Purchases and Subscriptions"})}),"\n",(0,r.jsxs)(n.p,{children:["Our boilerplate integrates ",(0,r.jsx)(n.strong,{children:"RevenueCat"})," to handle in-app purchases and subscriptions, providing a robust and easy-to-use system for monetization."]}),"\n",(0,r.jsx)(n.h2,{id:"benefits-of-revenuecat-in-our-boilerplate",children:"Benefits of RevenueCat in Our Boilerplate"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-platform consistency"}),": RevenueCat provides a unified API for both iOS and Android, simplifying our codebase."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Subscription management"}),": Easily handle complex subscription logic, including upgrades, downgrades, and renewals."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analytics and insights"}),": Get detailed reports on revenue, churn, and other key metrics out of the box."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server-side receipt validation"}),": Improve security and reduce fraud without additional backend work."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"using-in-app-purchases",children:"Using In-App Purchases"}),"\n",(0,r.jsxs)(n.p,{children:["We've set up a ",(0,r.jsx)(n.code,{children:"PurchaseManager"})," module that encapsulates RevenueCat functionality:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { PurchaseManager } from "@/services/PurchaseManager";\n\n// Check if a user has an active subscription\nconst hasSubscription = await PurchaseManager.hasActiveSubscription();\n\n// Get available products\nconst products = await PurchaseManager.getProducts();\n\n// Make a purchase\ntry {\n  await PurchaseManager.purchaseProduct("premium_monthly");\n  // Handle successful purchase\n} catch (error) {\n  // Handle purchase error\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"implementing-a-paywall",children:"Implementing a Paywall"}),"\n",(0,r.jsxs)(n.p,{children:["We've created a reusable ",(0,r.jsx)(n.code,{children:"Paywall"})," component that you can easily customize:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Paywall } from "@/components/Paywall";\n\nfunction MyScreen() {\n  return (\n    <View>\n      <Text>Upgrade to Premium!</Text>\n      <Paywall\n        products={["monthly", "yearly"]}\n        onPurchase={(productId) => {\n          // Handle successful purchase\n        }}\n      />\n    </View>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Always verify the subscription status on the server-side before granting access to premium features."}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.code,{children:"PurchaseManager.restorePurchases()"})," method to handle restore purchases requests from users."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);