"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[1368],{2484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(4848),i=t(8453);const o={sidebar_position:13},r="UI and Styling",c={id:"ui-and-styling",title:"UI and Styling",description:"Our boilerplate uses a combination of custom components inspired by React Native Elements and React Native Unistyles for a consistent and easily customizable UI.",source:"@site/docs/ui-and-styling.md",sourceDirName:".",slug:"/ui-and-styling",permalink:"/mvp-studio-architecture/docs/ui-and-styling",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/ui-and-styling.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13}},a={},l=[{value:"Custom UI Components",id:"custom-ui-components",level:2},{value:"Theming with Unistyles",id:"theming-with-unistyles",level:2},{value:"Theme Configuration",id:"theme-configuration",level:3},{value:"Using the Theme",id:"using-the-theme",level:3},{value:"Creating Stylesheets",id:"creating-stylesheets",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ui-and-styling",children:"UI and Styling"})}),"\n",(0,s.jsx)(n.p,{children:"Our boilerplate uses a combination of custom components inspired by React Native Elements and React Native Unistyles for a consistent and easily customizable UI."}),"\n",(0,s.jsx)(n.h2,{id:"custom-ui-components",children:"Custom UI Components"}),"\n",(0,s.jsx)(n.p,{children:"We've created a set of custom components based on React Native Elements, which provide a solid foundation for building your app's UI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { Button, Card, Input } from "@/components/ui";\n\nfunction MyScreen() {\n  return (\n    <Card>\n      <Input placeholder="Enter your name" />\n      <Button title="Submit" onPress={() => {}} />\n    </Card>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"These components are designed to be consistent with your app's theme and can be easily customized."}),"\n",(0,s.jsx)(n.h2,{id:"theming-with-unistyles",children:"Theming with Unistyles"}),"\n",(0,s.jsx)(n.p,{children:"We use React Native Unistyles for theming and styling. This allows for easy customization and consistent styling across the app."}),"\n",(0,s.jsx)(n.h3,{id:"theme-configuration",children:"Theme Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The theme is defined in ",(0,s.jsx)(n.code,{children:"src/styles/theme.ts"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { createTheme } from "react-native-unistyles";\n\nexport const theme = createTheme({\n  colors: {\n    primary: "#007AFF",\n    secondary: "#5856D6",\n    background: "#FFFFFF",\n    text: "#000000",\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n  },\n  // Add more theme properties as needed\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-the-theme",children:"Using the Theme"}),"\n",(0,s.jsx)(n.p,{children:"You can access the theme in your components:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { useStyles } from "react-native-unistyles";\n\nfunction MyComponent() {\n  const { theme } = useStyles();\n\n  return (\n    <View style={{ backgroundColor: theme.colors.background }}>\n      <Text style={{ color: theme.colors.text }}>Hello, World!</Text>\n    </View>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"creating-stylesheets",children:"Creating Stylesheets"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"createStylesheet"})," function to create type-safe stylesheets:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { createStylesheet } from "react-native-unistyles";\n\nconst useStyles = createStylesheet((theme) => ({\n  container: {\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.md,\n  },\n  text: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n}));\n\nfunction MyComponent() {\n  const styles = useStyles();\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Styled text</Text>\n    </View>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Use the provided custom UI components whenever possible to maintain consistency."}),"\n",(0,s.jsx)(n.li,{children:"Leverage the theme for colors, spacing, and other design tokens instead of hardcoding values."}),"\n",(0,s.jsx)(n.li,{children:"Create reusable stylesheets for components that are used frequently."}),"\n",(0,s.jsxs)(n.li,{children:["Use the ",(0,s.jsx)(n.code,{children:"responsiveSize"})," utility for creating responsive layouts."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"By using this combination of custom UI components and Unistyles, our boilerplate provides a flexible and maintainable approach to styling your React Native app."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);