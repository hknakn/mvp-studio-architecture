"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[699],{1627:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=t(4848),a=t(8453);const o={sidebar_position:1},r="Navigation",s={id:"navigation",title:"Navigation",description:"Our boilerplate uses React Navigation to handle navigation flows. The navigation structure is pre-configured to support common app layouts and can be easily customized.",source:"@site/docs/navigation.md",sourceDirName:".",slug:"/navigation",permalink:"/mvp-studio-architecture/docs/navigation",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/navigation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"File and Folder Structure",permalink:"/mvp-studio-architecture/docs/file-and-folder-structure"},next:{title:"State Management",permalink:"/mvp-studio-architecture/docs/state-management"}},c={},l=[{value:"Navigation Structure",id:"navigation-structure",level:2},{value:"Usage",id:"usage",level:2},{value:"Deep Linking",id:"deep-linking",level:2},{value:"Routing",id:"routing",level:2},{value:"Navigation Guards",id:"navigation-guards",level:2},{value:"Custom Navigation Hooks",id:"custom-navigation-hooks",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"navigation",children:"Navigation"})}),"\n",(0,i.jsx)(e.p,{children:"Our boilerplate uses React Navigation to handle navigation flows. The navigation structure is pre-configured to support common app layouts and can be easily customized."}),"\n",(0,i.jsx)(e.h2,{id:"navigation-structure",children:"Navigation Structure"}),"\n",(0,i.jsx)(e.p,{children:"The navigation in our boilerplate is structured as follows:"}),"\n",(0,i.jsx)(e.mermaid,{value:"graph TD\n    A[Root Navigator] --\x3e B[Auth Navigator]\n    A --\x3e C[Main Navigator]\n    C --\x3e D[Home Stack]\n    C --\x3e E[Profile Stack]\n    C --\x3e F[Settings Stack]\n    B --\x3e G[Login Screen]\n    B --\x3e H[Signup Screen]\n    B --\x3e I[Forgot Password Screen]\n    D --\x3e J[Home Screen]\n    D --\x3e K[Detail Screen]\n    E --\x3e L[Profile Screen]\n    E --\x3e M[Edit Profile Screen]\n    F --\x3e N[Settings Screen]\n    F --\x3e O[Notification Settings]\n    F --\x3e P[Privacy Settings]"}),"\n",(0,i.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(e.p,{children:"Here's how you can use the pre-configured navigation in the app:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'import { NavigationContainer } from "@react-navigation/native";\nimport RootNavigator from "@/navigation/RootNavigator";\nimport { linking } from "@/navigation/linking";\n\nfunction App() {\n  return (\n    <NavigationContainer linking={linking}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"deep-linking",children:"Deep Linking"}),"\n",(0,i.jsxs)(e.p,{children:["Deep linking is pre-configured in the boilerplate. The configuration is in ",(0,i.jsx)(e.code,{children:"src/navigation/linking.ts"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'export const linking = {\n  prefixes: ["myapp://", "https://myapp.com"],\n  config: {\n    screens: {\n      Home: "home",\n      Profile: "user/:id",\n      NotFound: "*",\n    },\n  },\n};\n'})}),"\n",(0,i.jsx)(e.p,{children:"To handle deep links:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Update the ",(0,i.jsx)(e.code,{children:"linking"})," configuration in ",(0,i.jsx)(e.code,{children:"src/navigation/linking.ts"}),"."]}),"\n",(0,i.jsxs)(e.li,{children:["Handle the deep link in the appropriate screen component using ",(0,i.jsx)(e.code,{children:"useRoute"})," hook."]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'import { useRoute } from "@react-navigation/native";\n\nfunction ProfileScreen() {\n  const route = useRoute();\n  const { id } = route.params;\n\n  // Use the id to fetch user data\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"routing",children:"Routing"}),"\n",(0,i.jsx)(e.p,{children:"Routing is handled automatically by React Navigation based on the navigator structure. To navigate between screens:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'import { useNavigation } from "@react-navigation/native";\n\nfunction MyComponent() {\n  const navigation = useNavigation();\n\n  const handlePress = () => {\n    navigation.navigate("Profile", { id: "123" });\n  };\n\n  return <Button title="Go to Profile" onPress={handlePress} />;\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"navigation-guards",children:"Navigation Guards"}),"\n",(0,i.jsx)(e.p,{children:"Navigation guards are implemented using custom navigators that wrap the built-in React Navigation navigators. Here's an example of an authenticated navigator:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'import React from "react";\nimport { createStackNavigator } from "@react-navigation/stack";\nimport { useSelector } from "react-redux";\nimport { RootState } from "@/store";\nimport LoginScreen from "@/screens/LoginScreen";\nimport MainNavigator from "./MainNavigator";\n\nconst Stack = createStackNavigator();\n\nexport function AuthenticatedNavigator() {\n  const isAuthenticated = useSelector(\n    (state: RootState) => state.auth.isAuthenticated\n  );\n\n  return (\n    <Stack.Navigator>\n      {isAuthenticated ? (\n        <Stack.Screen name="Main" component={MainNavigator} />\n      ) : (\n        <Stack.Screen name="Login" component={LoginScreen} />\n      )}\n    </Stack.Navigator>\n  );\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"This navigator checks the authentication state and renders either the main app screens or the login screen accordingly."}),"\n",(0,i.jsx)(e.h2,{id:"custom-navigation-hooks",children:"Custom Navigation Hooks"}),"\n",(0,i.jsx)(e.p,{children:"We've included several custom navigation hooks to make common navigation tasks easier:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:'import { useAppNavigation } from "@/hooks/useAppNavigation";\n\nfunction MyComponent() {\n  const { navigateToHome, navigateToProfile, openModal } = useAppNavigation();\n\n  return (\n    <>\n      <Button title="Go to Home" onPress={() => navigateToHome()} />\n      <Button title="Go to Profile" onPress={() => navigateToProfile()} />\n      <Button title="Open Modal" onPress={() => openModal("ModalName")} />\n    </>\n  );\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>s});var i=t(6540);const a={},o=i.createContext(a);function r(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);