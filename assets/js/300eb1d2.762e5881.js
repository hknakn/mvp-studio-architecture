"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[2986],{6571:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=t(4848),r=t(8453);const a={},i="React Hook Form",s={id:"react-hook-form",title:"React Hook Form",description:"React Hook Form is a library for managing forms in React applications. It provides an efficient and flexible way to handle form state and validation.",source:"@site/docs/react-hook-form.md",sourceDirName:".",slug:"/react-hook-form",permalink:"/mvp-studio-architecture/docs/react-hook-form",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/react-hook-form.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"React Native Skottie",permalink:"/mvp-studio-architecture/docs/skottie"},next:{title:"React Native SVG",permalink:"/mvp-studio-architecture/docs/react-native-svg"}},c={},l=[{value:"Usage in MVP Studio Boilerplate",id:"usage-in-mvp-studio-boilerplate",level:2},{value:"Basic Form",id:"basic-form",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"react-hook-form",children:"React Hook Form"})}),"\n",(0,o.jsx)(n.p,{children:"React Hook Form is a library for managing forms in React applications. It provides an efficient and flexible way to handle form state and validation."}),"\n",(0,o.jsx)(n.h2,{id:"usage-in-mvp-studio-boilerplate",children:"Usage in MVP Studio Boilerplate"}),"\n",(0,o.jsx)(n.h3,{id:"basic-form",children:"Basic Form"}),"\n",(0,o.jsx)(n.p,{children:"Here's an example of a basic form using React Hook Form:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import React from "react";\nimport { View, TextInput, Button } from "react-native";\nimport { useForm, Controller } from "react-hook-form";\n\nconst LoginForm = () => {\n  const { control, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <View>\n      <Controller\n        control={control}\n        render={({ field: { onChange, onBlur, value } }) => (\n          <TextInput\n            onBlur={onBlur}\n            onChangeText={onChange}\n            value={value}\n            placeholder="Email"\n          />\n        )}\n        name="email"\n        rules={{ required: true }}\n        defaultValue=""\n      />\n      {errors.email && <Text>This field is required.</Text>}\n\n      <Controller\n        control={control}\n        render={({ field: { onChange, onBlur, value } }) => (\n          <TextInput\n            onBlur={onBlur}\n            onChangeText={onChange}\n            value={value}\n            placeholder="Password"\n            secureTextEntry\n          />\n        )}\n        name="password"\n        rules={{ required: true, minLength: 6 }}\n        defaultValue=""\n      />\n      {errors.password && <Text>Password must be at least 6 characters.</Text>}\n\n      <Button title="Submit" onPress={handleSubmit(onSubmit)} />\n    </View>\n  );\n};\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);