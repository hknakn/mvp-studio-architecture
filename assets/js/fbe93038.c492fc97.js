"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[1133],{2697:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(4848),i=n(8453);const r={sidebar_position:7},o="Testing",a={id:"testing",title:"Testing",description:"Our boilerplate comes with a testing setup to ensure code quality and reliability. We use Jest as our test runner, React Native Testing Library for component testing, and Detox for end-to-end testing.",source:"@site/docs/testing.md",sourceDirName:".",slug:"/testing",permalink:"/mvp-studio-architecture/docs/testing",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/testing.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docs",previous:{title:"Internationalization",permalink:"/mvp-studio-architecture/docs/internationalization"},next:{title:"CI/CD",permalink:"/mvp-studio-architecture/docs/ci-cd"}},c={},d=[{value:"Unit Testing with Jest",id:"unit-testing-with-jest",level:2},{value:"Running Tests",id:"running-tests",level:3},{value:"Writing Unit Tests",id:"writing-unit-tests",level:3},{value:"Component Testing with React Native Testing Library",id:"component-testing-with-react-native-testing-library",level:2},{value:"Writing Component Tests",id:"writing-component-tests",level:3},{value:"End-to-End Testing with Detox",id:"end-to-end-testing-with-detox",level:2},{value:"Setting Up Detox",id:"setting-up-detox",level:3},{value:"Writing E2E Tests",id:"writing-e2e-tests",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"testing",children:"Testing"})}),"\n",(0,s.jsx)(t.p,{children:"Our boilerplate comes with a testing setup to ensure code quality and reliability. We use Jest as our test runner, React Native Testing Library for component testing, and Detox for end-to-end testing."}),"\n",(0,s.jsx)(t.mermaid,{value:"graph TD\n    A[Write Code] --\x3e B[Unit Tests]\n    B --\x3e C{Pass?}\n    C --\x3e|Yes| D[Integration Tests]\n    C --\x3e|No| A\n    D --\x3e E{Pass?}\n    E --\x3e|Yes| F[E2E Tests]\n    E --\x3e|No| A\n    F --\x3e G{Pass?}\n    G --\x3e|Yes| H[Ready for Review]\n    G --\x3e|No| A"}),"\n",(0,s.jsx)(t.h2,{id:"unit-testing-with-jest",children:"Unit Testing with Jest"}),"\n",(0,s.jsx)(t.p,{children:"Jest is configured to run unit tests for your JavaScript/TypeScript code."}),"\n",(0,s.jsx)(t.h3,{id:"running-tests",children:"Running Tests"}),"\n",(0,s.jsx)(t.p,{children:"To run all tests:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,s.jsx)(t.p,{children:"To run tests in watch mode:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run test:watch\n"})}),"\n",(0,s.jsx)(t.h3,{id:"writing-unit-tests",children:"Writing Unit Tests"}),"\n",(0,s.jsx)(t.p,{children:"Here's an example of a unit test for a utility function:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'export const add = (a: number, b: number) => a + b;\n\ndescribe("Math utils", () => {\n  it("should add two numbers correctly", () => {\n    expect(add(1, 2)).toBe(3);\n    expect(add(-1, 1)).toBe(0);\n    expect(add(0, 0)).toBe(0);\n  });\n});\n'})}),"\n",(0,s.jsx)(t.h2,{id:"component-testing-with-react-native-testing-library",children:"Component Testing with React Native Testing Library"}),"\n",(0,s.jsx)(t.p,{children:"We use React Native Testing Library to test React components in a way that resembles how users interact with your app."}),"\n",(0,s.jsx)(t.h3,{id:"writing-component-tests",children:"Writing Component Tests"}),"\n",(0,s.jsx)(t.p,{children:"Here's an example of a component test:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'import React from "react";\nimport { render, fireEvent } from "@testing-library/react-native";\nimport { Button } from "../Button";\n\ndescribe("Button", () => {\n  it("renders correctly", () => {\n    const { getByText } = render(\n      <Button title="Press me" onPress={() => {}} />\n    );\n    expect(getByText("Press me")).toBeTruthy();\n  });\n\n  it("calls onPress when pressed", () => {\n    const onPress = jest.fn();\n    const { getByText } = render(<Button title="Press me" onPress={onPress} />);\n    fireEvent.press(getByText("Press me"));\n    expect(onPress).toHaveBeenCalledTimes(1);\n  });\n});\n'})}),"\n",(0,s.jsx)(t.h2,{id:"end-to-end-testing-with-detox",children:"End-to-End Testing with Detox"}),"\n",(0,s.jsx)(t.p,{children:"Detox is used for writing and running end-to-end tests on actual devices or simulators."}),"\n",(0,s.jsx)(t.h3,{id:"setting-up-detox",children:"Setting Up Detox"}),"\n",(0,s.jsx)(t.p,{children:"Detox is pre-configured in the boilerplate. To run Detox tests:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Build the app for testing:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"detox build --configuration ios.sim.debug\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Run the tests:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"detox test --configuration ios.sim.debug\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"writing-e2e-tests",children:"Writing E2E Tests"}),"\n",(0,s.jsx)(t.p,{children:"Here's an example of a Detox test:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'describe("Example", () => {\n  beforeEach(async () => {\n    await device.reloadReactNative();\n  });\n\n  it("should have welcome screen", async () => {\n    await expect(element(by.text("Welcome"))).toBeVisible();\n  });\n\n  it("should show hello screen after tap", async () => {\n    await element(by.text("Hello")).tap();\n    await expect(element(by.text("Hello!!!"))).toBeVisible();\n  });\n});\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);