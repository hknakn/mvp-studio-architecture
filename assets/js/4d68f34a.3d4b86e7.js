"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[5241],{1068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var s=n(4848),o=n(8453);const i={sidebar_position:3},a="Push Notifications",r={id:"push-notifications",title:"Push Notifications",description:"Our boilerplate includes Firebase Cloud Messaging (FCM) for handling push notifications. This allows you to send targeted notifications to your app users.",source:"@site/docs/push-notifications.md",sourceDirName:".",slug:"/push-notifications",permalink:"/mvp-studio-architecture/docs/push-notifications",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/push-notifications.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Database",permalink:"/mvp-studio-architecture/docs/database"},next:{title:"Feature Flagging",permalink:"/mvp-studio-architecture/docs/feature-flagging"}},c={},u=[{value:"Usage",id:"usage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"push-notifications",children:"Push Notifications"})}),"\n",(0,s.jsxs)(t.p,{children:["Our boilerplate includes ",(0,s.jsx)(t.strong,{children:"Firebase Cloud Messaging (FCM)"})," for handling push notifications. This allows you to send targeted notifications to your app users."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.p,{children:"Here's how to handle push notifications in your app:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'import messaging from "@react-native-firebase/messaging";\n\n// Request permission (iOS)\nconst requestUserPermission = async () => {\n  const authStatus = await messaging().requestPermission();\n  const enabled =\n    authStatus === messaging.AuthorizationStatus.AUTHORIZED ||\n    authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n\n  if (enabled) {\n    console.log("Authorization status:", authStatus);\n  }\n};\n\n// Get FCM token\nconst getFCMToken = async () => {\n  const token = await messaging().getToken();\n  console.log("FCM Token:", token);\n  // Send this token to your server to target this device for notifications\n};\n\n// Handle incoming messages\nmessaging().onMessage(async (remoteMessage) => {\n  console.log("A new FCM message arrived!", JSON.stringify(remoteMessage));\n  // Handle the message (e.g., show a local notification)\n});\n\n// Handle notification opened app\nmessaging().onNotificationOpenedApp((remoteMessage) => {\n  console.log(\n    "Notification caused app to open from background state:",\n    JSON.stringify(remoteMessage)\n  );\n  // Navigate to appropriate screen based on the notification\n});\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);