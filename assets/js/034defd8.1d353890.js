"use strict";(self.webpackChunkmvp_studio_architecture=self.webpackChunkmvp_studio_architecture||[]).push([[7769],{4558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=n(4848),s=n(8453);const i={sidebar_position:2},o="State Management",a={id:"state-management",title:"State Management",description:"Our boilerplate uses Redux Toolkit for efficient state management, combined with RTK Query for API calls and caching, and Redux Persist for state persistence. This setup provides a powerful and flexible way to manage your app's state and handle data fetching.",source:"@site/docs/state-management.md",sourceDirName:".",slug:"/state-management",permalink:"/mvp-studio-architecture/docs/state-management",draft:!1,unlisted:!1,editUrl:"https://github.com/your-org/mvp-studio-architecture/edit/master/docs/docs/state-management.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Navigation",permalink:"/mvp-studio-architecture/docs/navigation"},next:{title:"Data Handling",permalink:"/mvp-studio-architecture/docs/data-handling"}},c={},d=[{value:"Redux Toolkit Setup",id:"redux-toolkit-setup",level:2},{value:"Redux Toolkit Slices",id:"redux-toolkit-slices",level:2},{value:"RTK Query Setup",id:"rtk-query-setup",level:2},{value:"Using Redux and RTK Query in Components",id:"using-redux-and-rtk-query-in-components",level:2},{value:"Best Practices",id:"best-practices",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"state-management",children:"State Management"})}),"\n",(0,r.jsxs)(t.p,{children:["Our boilerplate uses ",(0,r.jsx)(t.strong,{children:"Redux Toolkit"})," for efficient state management, combined with ",(0,r.jsx)(t.strong,{children:"RTK Query"})," for API calls and caching, and ",(0,r.jsx)(t.strong,{children:"Redux Persist"})," for state persistence. This setup provides a powerful and flexible way to manage your app's state and handle data fetching."]}),"\n",(0,r.jsx)(t.p,{children:"Here's how state changes flow through the application:"}),"\n",(0,r.jsx)(t.mermaid,{value:"graph LR\n    A[User Action] --\x3e B[Dispatch Action]\n    B --\x3e C[RTK Query]\n    C --\x3e D[API Call]\n    D --\x3e E[Reducer]\n    E --\x3e F[State Update]\n    F --\x3e G[Selector]\n    G --\x3e H[Component Re-render]"}),"\n",(0,r.jsx)(t.h2,{id:"redux-toolkit-setup",children:"Redux Toolkit Setup"}),"\n",(0,r.jsxs)(t.p,{children:["Redux Toolkit is configured in ",(0,r.jsx)(t.code,{children:"src/store/index.ts"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { configureStore } from "@reduxjs/toolkit";\nimport { persistStore, persistReducer } from "redux-persist";\nimport AsyncStorage from "@react-native-async-storage/async-storage";\nimport { api } from "@/services/api";\nimport rootReducer from "./rootReducer";\n\nconst persistConfig = {\n  key: "root",\n  storage: AsyncStorage,\n  whitelist: ["auth", "user"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(api.middleware),\n});\n\nexport const persistor = persistStore(store);\n'})}),"\n",(0,r.jsx)(t.h2,{id:"redux-toolkit-slices",children:"Redux Toolkit Slices"}),"\n",(0,r.jsxs)(t.p,{children:["We use Redux Toolkit's ",(0,r.jsx)(t.code,{children:"createSlice"})," to define our reducers and actions:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { createSlice, PayloadAction } from "@reduxjs/toolkit";\n\ninterface AuthState {\n  token: string | null;\n  isAuthenticated: boolean;\n}\n\nconst initialState: AuthState = {\n  token: null,\n  isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n  name: "auth",\n  initialState,\n  reducers: {\n    setToken: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n    },\n    clearToken: (state) => {\n      state.token = null;\n      state.isAuthenticated = false;\n    },\n  },\n});\n\nexport const { setToken, clearToken } = authSlice.actions;\nexport default authSlice.reducer;\n'})}),"\n",(0,r.jsx)(t.h2,{id:"rtk-query-setup",children:"RTK Query Setup"}),"\n",(0,r.jsxs)(t.p,{children:["RTK Query is configured in ",(0,r.jsx)(t.code,{children:"src/services/api.ts"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";\nimport { RootState } from "@/store";\n\nexport const api = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: "https://api.example.com",\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).auth.token;\n      if (token) {\n        headers.set("authorization", `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    getUsers: builder.query<User[], void>({\n      query: () => "users",\n    }),\n    getUserById: builder.query<User, string>({\n      query: (id) => `users/${id}`,\n    }),\n    createUser: builder.mutation<User, Partial<User>>({\n      query: (newUser) => ({\n        url: "users",\n        method: "POST",\n        body: newUser,\n      }),\n    }),\n  }),\n});\n\nexport const { useGetUsersQuery, useGetUserByIdQuery, useCreateUserMutation } =\n  api;\n'})}),"\n",(0,r.jsx)(t.h2,{id:"using-redux-and-rtk-query-in-components",children:"Using Redux and RTK Query in Components"}),"\n",(0,r.jsx)(t.p,{children:"We've included custom hooks for easy access to the Redux store and RTK Query:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { useAppSelector, useAppDispatch } from "@/hooks/useRedux";\nimport { setToken } from "@/store/slices/authSlice";\nimport { useGetUsersQuery, useCreateUserMutation } from "@/services/api";\n\nfunction UserComponent() {\n  const dispatch = useAppDispatch();\n  const isAuthenticated = useAppSelector((state) => state.auth.isAuthenticated);\n  const { data: users, isLoading, error } = useGetUsersQuery();\n  const [createUser] = useCreateUserMutation();\n\n  const handleLogin = async () => {\n    const token = "example_token";\n    dispatch(setToken(token));\n  };\n\n  const handleCreateUser = async () => {\n    try {\n      await createUser({ name: "New User" });\n    } catch (error) {\n      console.error("Failed to create user:", error);\n    }\n  };\n\n  if (!isAuthenticated) {\n    return <LoginButton onPress={handleLogin} />;\n  }\n\n  if (isLoading) return <Loading />;\n  if (error) return <Error />;\n\n  return (\n    <View>\n      {users.map((user) => (\n        <UserItem key={user.id} user={user} />\n      ))}\n      <Button title="Add User" onPress={handleCreateUser} />\n    </View>\n  );\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Use Redux Toolkit's ",(0,r.jsx)(t.code,{children:"createSlice"})," for all your reducers to minimize boilerplate."]}),"\n",(0,r.jsx)(t.li,{children:"Use RTK Query for all API calls to benefit from automatic caching and refetching."}),"\n",(0,r.jsxs)(t.li,{children:["Use the ",(0,r.jsx)(t.code,{children:"useAppSelector"})," and ",(0,r.jsx)(t.code,{children:"useAppDispatch"})," hooks for type-safe Redux usage."]}),"\n",(0,r.jsx)(t.li,{children:"Implement proper error handling and loading states in your components when using RTK Query."}),"\n",(0,r.jsx)(t.li,{children:"Use Redux Persist carefully, only persisting necessary state to avoid performance issues."}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);